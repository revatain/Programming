<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mybatis_project.MyBatisTodoRepository">
    <resultMap id="TodoResultMap" type="com.example.mybatis_project.TodoEntity">
        <result column="idx" property="idx" jdbcType="NUMERIC" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="done_yn" property="doneYn" jdbcType="VARCHAR" />
        <result column="delete_yn" property="deleteYn" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="delete_date" property="deleteDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="commonColumn">
        idx,
        content,
        done_yn,
        delete_yn,
        create_date,
        update_date,
        delete_date
    </sql>

    <select id="findAll" resultMap="TodoResultMap">
        SELECT <include refid="commonColumn"/>
        FROM TODO
        WHERE delete_yn = 'N'
    </select>

    <select id="findAllByDoneYn" parameterType="String" resultMap="TodoResultMap">
        SELECT <include refid="commonColumn"/>
        FROM TODO
        WHERE delete_yn = 'N'
            AND done_yn = #{doneYn}
    </select>

    <select id="findByIdx" parameterType="Integer" resultMap="TodoResultMap">
        SELECT <include refid="commonColumn"/>
        FROM TODO
        WHERE idx = #{idx}
            AND delete_yn = 'N'
    </select>

    <insert id="insert" parameterType="com.example.mybatis_project.TodoEntity">
        INSERT INTO TODO (
            content,
            done_yn,
            delete_yn,
            create_date
        )
        VALUES (
            #{content},
            #{doneYn},
            #{deleteYn},
            #{createDate}
        )
    </insert>


    <update id="update" parameterType="com.example.mybatis_project.TodoEntity">
        UPDATE 	TODO
		SET     content = #{content},
                done_yn = #{doneYn},
                delete_yn = #{deleteYn},
                update_date = #{updateDate},
                delete_date = #{deleteDate}
		WHERE	idx = #{idx}
    </update>
</mapper>